#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct ogrBlg{
    char ogrNum[15];
    char ad[50];
    char soyad[50];
    char kayitSirasi[10];
    char ogrTuru[10];
};
struct ogrInt{
    int numara;
    char isim[50];
    char soyisim[50];
    int siraNum;
    int tur;
};
void sil (){

    struct ogrBlg ogrTbl[500];
    FILE *oku,*yaz;
    oku = fopen("ornek_ogrenci_kayit_bilgileri.txt","r");
    yaz = fopen("tekrarEtmeyenler.txt","w");
    int say = 0, i=0, j;

    while (!feof(oku) )
    {
        fscanf(oku,"%s %s %s %s %s\n",&ogrTbl[say].ogrNum,&ogrTbl[say].ad,&ogrTbl[say].soyad,&ogrTbl[say].kayitSirasi,&ogrTbl[say].ogrTuru );
        say++;
    }
    printf("Tekrar eden kayitlar:\n");
    for (j = i+1; j<say-1; j++)
    {
        if (strcmp(ogrTbl[i].ad, ogrTbl[j].ad)== 0 && strcmp(ogrTbl[i].soyad, ogrTbl[j].soyad)== 0 && strcmp(ogrTbl[i].ogrTuru, ogrTbl[j].ogrTuru)== 0 )
        {
            printf("%10s %10s %10s\n",ogrTbl[j].ad, ogrTbl[j].soyad, ogrTbl[j].ogrTuru);
        }
        else
        {
            fprintf(yaz,"%10s %11s %11s %10s %10s\n",ogrTbl[i].ogrNum,ogrTbl[i].ad, ogrTbl[i].soyad,ogrTbl[i].kayitSirasi, ogrTbl[i].ogrTuru);

        }
        i++;
    }
    fclose(oku);
    fclose(yaz);

}
void bol (){
    struct ogrBlg ogrTbl[500];
    FILE *oku,*yazbir, *yaziki;
    oku = fopen("tekrarEtmeyenler.txt","r");
    yazbir = fopen("birinciOgretim.txt","w");
    yaziki = fopen("ikinciOgretim.txt","w");
    int say = 0, i=0;

    while (!feof(oku) )
    {
        fscanf(oku,"%s %s %s %s %s\n",&ogrTbl[say].ogrNum,&ogrTbl[say].ad,&ogrTbl[say].soyad,&ogrTbl[say].kayitSirasi,&ogrTbl[say].ogrTuru );
        say++;
    }
    fscanf(oku,"%s %s %s %s %s\n",&ogrTbl[0].ogrNum,&ogrTbl[0].ad,&ogrTbl[0].soyad,&ogrTbl[0].kayitSirasi,&ogrTbl[0].ogrTuru );
    for(i=1; i< say-1; i++)
    {
        if (strcmp(ogrTbl[i].ogrTuru, "I")== 0)
        {
            strcpy(ogrTbl[i].ogrTuru, "1");
            if (strcmp(ogrTbl[i].ogrNum, "-")== 0)
            {
                strcpy(ogrTbl[i].ogrNum, "0");
            }
            fprintf(yazbir,"%10s %11s %11s %10s %10s\n",ogrTbl[i].ogrNum,ogrTbl[i].ad, ogrTbl[i].soyad,ogrTbl[i].kayitSirasi, ogrTbl[i].ogrTuru);
        }
        else
        {
            strcpy(ogrTbl[i].ogrTuru, "2");
            if (strcmp(ogrTbl[i].ogrNum, "-")== 0)
            {
                strcpy(ogrTbl[i].ogrNum, "0");
            }
            fprintf(yaziki,"%10s %11s %11s %10s %10s\n",ogrTbl[i].ogrNum,ogrTbl[i].ad, ogrTbl[i].soyad,ogrTbl[i].kayitSirasi, ogrTbl[i].ogrTuru);
        }
    }
    fclose(oku);
    fclose(yazbir);
    fclose(yaziki);

}
void numAta(){
    struct ogrInt tablo [500];
    FILE *oku,*birinci;
    oku=fopen("birinciOgretim.txt", "r");
    birinci=fopen("numBirinci.txt","w");
    int say=0,i,j;
    while(!feof(oku))
    {
        fscanf(oku,"%d %s %s %d %d",&tablo[say].numara,&tablo[say].isim,&tablo[say].soyisim,&tablo[say].siraNum,&tablo[say].tur);
        say++;
    }
    int tempNu;
    char tempIsim[50];
    char tempSoyisim[50];
    int tempSira;
    int tempTur;
    for (i=0; i<say-1; i++)
    {
        for (j=i+1; j<say-1; j++)
        {
            if (tablo[i].siraNum>=tablo[j].siraNum)
            {
                tempNu=tablo[i].numara;
                strcpy(tempIsim,tablo[i].isim);
                strcpy(tempSoyisim,tablo[i].soyisim);
                tempSira=tablo[i].siraNum;
                tempTur=tablo[i].tur;
                /**kkk**/
                tablo[i].numara=tablo[j].numara;
                strcpy(tablo[i].isim,tablo[j].isim);
                strcpy(tablo[i].soyisim,tablo[j].soyisim);
                tablo[i].siraNum=tablo[j].siraNum;
                tablo[i].tur=tablo[j].tur;
                /**kkkk**/
                tablo[j].numara=tempNu;
                strcpy(tablo[j].isim,tempIsim);
                strcpy(tablo[j].soyisim,tempSoyisim);
                tablo[j].siraNum=tempSira;
                tablo[j].tur=tempTur;
            }
        }
    }
    for(i=0; i<say-1; i++)
    {
        if(tablo[i].tur==1)
        {
            if(tablo[i].numara == 0)
            {
                tablo[i].numara=1701000+tablo[i].siraNum;
            }
            fprintf(birinci,"%10d %10s %10s %10d %10d\n",tablo[i].numara,tablo[i].isim,tablo[i].soyisim,tablo[i].siraNum,tablo[i].tur);
        }
    }
    fclose(oku);
    fclose(birinci);
}
void numAtaIki(){
    struct ogrInt tablo [500];
    FILE *oku,*ikinci;
    oku=fopen("ikinciOgretim.txt","r");
    ikinci=fopen("numIkinci.txt","w");
    int say=0;
    while(!feof(oku))
    {
        fscanf(oku,"%d %s %s %d %d",&tablo[say].numara,&tablo[say].isim,&tablo[say].soyisim,&tablo[say].siraNum,&tablo[say].tur);
        say++;
    }
    int i,j;
    int tempNu;
    char tempIsim[50];
    char tempSoyisim[50];
    int tempSira;
    int tempTur;
    for (i=0; i<say-1; i++)
    {
        for (j=i+1; j<say-1; j++)
        {
            if (tablo[i].siraNum>=tablo[j].siraNum)
            {
                tempNu=tablo[i].numara;
                strcpy(tempIsim,tablo[i].isim);
                strcpy(tempSoyisim,tablo[i].soyisim);
                tempSira=tablo[i].siraNum;
                tempTur=tablo[i].tur;
                /**kkk**/
                tablo[i].numara=tablo[j].numara;
                strcpy(tablo[i].isim,tablo[j].isim);
                strcpy(tablo[i].soyisim,tablo[j].soyisim);
                tablo[i].siraNum=tablo[j].siraNum;
                tablo[i].tur=tablo[j].tur;
                /**kkkk**/
                tablo[j].numara=tempNu;
                strcpy(tablo[j].isim,tempIsim);
                strcpy(tablo[j].soyisim,tempSoyisim);
                tablo[j].siraNum=tempSira;
                tablo[j].tur=tempTur;
            }
        }
    }
    int k=1;
    for(i=0; i<say-1; i++)
    {
        if(tablo[i].tur==2)
        {
            if(tablo[i].numara == 0)
            {
                tablo[i].numara=1702000+k;
                k++;
            }
            fprintf(ikinci,"%10d %10s %10s %10d %10d\n",tablo[i].numara,tablo[i].isim,tablo[i].soyisim,tablo[i].siraNum,tablo[i].tur);
        }
    }

    fclose(oku);
    fclose(ikinci);
}
void ogrenciEkle(){
    struct ogrInt tablo[500];
    FILE *ogrEkleBir,*ogrEkleIki;
    ogrEkleBir=fopen("numBirinci.txt","a");
    ogrEkleIki=fopen("numIkinci.txt","a");
    int secim,sayBir=0,sayIki=0;
    printf("Eklemek istediginiz kaydin turu 1. ogretim ise 1 giriniz degilse herhangi bir sayi giriniz");
    scanf("%d",&secim);
    if(secim==1)
    {
        //ekleme yap
        FILE *oku;
        oku=fopen("numBirinci.txt","r");
        while(!feof(oku))
        {
            fscanf(oku,"%d %s %s %d %d",&tablo[sayBir].numara,&tablo[sayBir].isim,&tablo[sayBir].soyisim,&tablo[sayBir].siraNum,&tablo[sayBir].tur);
            sayBir++;
        }
        printf("Ogrencinin numarasini giriniz:");
        scanf("%d",&tablo[sayBir].numara);
        printf("Ogrencinin adini giriniz:");
        scanf("%s",&tablo[sayBir].isim);
        printf("Ogrencinin soyismini giriniz:");
        scanf("%s",&tablo[sayBir].soyisim);
        tablo[sayBir].siraNum=sayBir;
        tablo[sayBir].tur=1;
        fprintf(ogrEkleBir,"%10d %10s %10s %10d %10d",tablo[sayBir].numara,tablo[sayBir].isim,tablo[sayBir].soyisim,tablo[sayBir].siraNum,tablo[sayBir].tur);
    }
    else
    {
        FILE *okuDiger;
        okuDiger=fopen("numIkinci.txt","r");
        while(!feof(okuDiger))
        {
            fscanf(okuDiger,"%d %s %s %d %d",&tablo[sayIki].numara,&tablo[sayIki].isim,&tablo[sayIki].soyisim,&tablo[sayIki].siraNum,&tablo[sayIki].tur);
            sayIki++;
        }
        printf("Ogrencinin numarasini giriniz:");
        scanf("%d",&tablo[sayIki].numara);
        printf("Ogrencinin adini giriniz:");
        scanf("%s",&tablo[sayIki].isim);
        printf("Ogrencinin soyismini giriniz:");
        scanf("%s",&tablo[sayIki].soyisim);
        tablo[sayIki].siraNum=sayIki;
        tablo[sayIki].tur=2;
        fprintf(ogrEkleIki,"%10d %10s %10s %10d %10d",tablo[sayIki].numara,tablo[sayIki].isim,tablo[sayIki].soyisim,tablo[sayIki].siraNum,tablo[sayIki].tur);
    }
}
void sinifOlusturma(){
    int toplam=0,ortalama,sinifSayisi;
    int i,j,temp,ogrSayisiBir,ogrSayisiIki,a;
    /** Birinci ogretim ogrenci sayisini okuma**/
    struct ogrInt tablo[500];
    FILE *okuBir,*okuIki;
    okuBir=fopen("numBirinci.txt","r");
    okuIki=fopen("numIkinci.txt","r");
    int say=0,say2=0;
    while(!feof(okuBir))
    {
        fscanf(okuBir,"%d %s %s %d %d",&tablo[say].numara,&tablo[say].isim,&tablo[say].soyisim,&tablo[say].siraNum,&tablo[say].tur);
        say++;
    }
    while(!feof(okuIki))
    {
        fscanf(okuIki,"%d %s %s %d %d",&tablo[say2].numara,&tablo[say2].isim,&tablo[say2].soyisim,&tablo[say2].siraNum,&tablo[say2].tur);
        say2++;
    }
    ogrSayisiBir=say;
    ogrSayisiIki=say2;
    /** Ikinci ogretim ogrenci sayisini okuma**/

    /**Sinif islemleri**/
    printf("Sinif sayisini giriniz:");
    scanf("%d",&sinifSayisi);
    int dizi[sinifSayisi];
    int diziDiger[sinifSayisi];
    /** Sinif kapasitesi isteme **/
    for (i=0; i<sinifSayisi; i++)
    {
        printf("Sinif kapasitesini giriniz:");
        scanf("%d",&dizi[i]);
        toplam=toplam+dizi[i];
    }
    /**Toplam ogrenciden kapasite az olamaz**/
    if(ogrSayisiBir>toplam && ogrSayisiIki>toplam)
    {
        printf("Lütfen kapasiteyi buyuk girin:\n\n");
        printf("Sinif sayisini giriniz:");
        scanf("%d",&sinifSayisi);
        int dizi[sinifSayisi];
        int diziDiger[sinifSayisi];
        /** Sinif kapasitesi isteme **/
        for (i=0; i<sinifSayisi; i++)
        {
            printf("Sinif kapasitesini giriniz:");
            scanf("%d",&dizi[i]);
            toplam=toplam+dizi[i];
        }
    }
    for(i=0; i<sinifSayisi; i++)
    {
        diziDiger[i]=dizi[i];
    }
    /** Sinif Siralamasi Kucukten Buyuge **/
    for(i=0; i<sinifSayisi; i++)
    {
        for(j=0; j<sinifSayisi; j++)
        {
            if (dizi[i]<=dizi[j])
            {
                temp=dizi[i];
                dizi[i]=dizi[j];
                dizi[j]=temp;
            }
        }
    }
    /** Sinif siralamasi buyukten kucuge **/
    for(i=0; i<sinifSayisi; i++)
    {
        for(j=0; j<sinifSayisi; j++)
        {
            if (diziDiger[i]>=diziDiger[j])
            {
                temp=diziDiger[i];
                diziDiger[i]=diziDiger[j];
                diziDiger[j]=temp;
            }
        }
    }
    /**Dosyalara cikarmak icin kayit sayilarini dizilere attik**/
    int kapBir[sinifSayisi],kapIki[sinifSayisi];
    /**Sýnýflardaki ogrenciler yazýlacak**/
    printf("Esit dagilimli sinif icin 1'e \n En az sinif icin herhangi bir sayiya basiniz:\n");
    scanf("%d",&a);
    int kalan=0;
    if(a==1)
    {
        /**Birinci ogretim ve ikinci ogretim olarak ayirmayi yap!**/
        printf("Birinci ogretim:\n\n");
        for(i=0; i<sinifSayisi; i++)
        {
            ortalama=ogrSayisiBir/(sinifSayisi-i);
            if(ortalama<=dizi[i])
            {
                printf("%d. sinifta %d kisi vardir\n",i+1,ortalama);
                kapBir[i]=ortalama;
                ogrSayisiBir-=ortalama;
            }
            else
            {
                printf("1. sinifta %d kisi vardir\n",dizi[i]);
                kapBir[i]=dizi[i];
                ogrSayisiBir-=dizi[i];
            }
        }
        printf("Ikinci ogretim:\n\n");
        for(i=0; i<sinifSayisi; i++)
        {
            ortalama=ogrSayisiIki/(sinifSayisi-i);
            if(ortalama<=dizi[i])
            {
                printf("%d. sinifta %d kisi vardir\n",i+1,ortalama);
                kapIki[i]=ortalama;
                ogrSayisiIki-=ortalama;
            }
            else
            {
                printf("1. sinifta %d kisi vardir\n",dizi[i]);
                kapIki[i]=dizi[i];
                ogrSayisiIki-=dizi[i];
            }
        }
    }
    else
    {
        /**Birinci ogretim ve ikinci ogretim olarak ayirmayi yap!**/
        printf("Birinci ogretim:\n\n");
        for(i=0; i<sinifSayisi; i++)
        {
            if(ogrSayisiBir>diziDiger[i])
            {
                printf("%d. sinifta %d kisi vardir\n",i+1,diziDiger[i]);
                kapBir[i]=diziDiger[i];
                ogrSayisiBir=ogrSayisiBir-diziDiger[i];
            }
            else
            {
                printf("%d. sinifta %d kisi vardir\n",i+1,ogrSayisiBir);
                kapBir[i]=ogrSayisiBir;
                /**dagilim yaparken dizinin diðer elemanlari default olduðundan sifir atandi**/
                int a=0;
                for(a=i;a<sinifSayisi;a++){
                    kapBir[a]=0;
                }
                printf("Bundan sonraki siniflarda ogrenci bulunmamaktadir\n");
                break;
            }

        }
        printf("Ikinci ogretim:\n\n");
        for(i=0; i<sinifSayisi; i++)
        {
            if(ogrSayisiIki>diziDiger[i])
            {
                printf("%d. sinifta %d kisi vardir\n",i+1,diziDiger[i]);
                kapIki[i]=diziDiger[i];
                ogrSayisiIki=ogrSayisiIki-diziDiger[i];
            }
            else
            {
                printf("%d. sinifta %d kisi vardir\n",i+1,ogrSayisiIki);
                kapIki[i]=ogrSayisiIki;
                /**dagilim yaparken dizinin diðer elemanlari default olduðundan sifir atandi**/
                int a=0;
                for(a=i;a<sinifSayisi;a++){
                    kapIki[a]=0;
                }
                printf("Bundan sonraki siniflarda ogrenci bulunmamaktadir\n");
                break;
            }

        }
    }

    FILE *dagilim[sinifSayisi*2];
    char sema[30];
    for(i=1; i<=sinifSayisi; i++)
    {
        sprintf(sema,"%s%d%s%c","sinif",i,"ogr1.txt",'\0');
        dagilim[2*i-2]=fopen(sema,"w");
        sprintf(sema,"%s%d%s%c","sinif",i,"ogr2.txt",'\0');
        dagilim[2*i-1]=fopen(sema,"w");
    }
    int z=0,m;
    for (i=1; i<=sinifSayisi; i++)
    {
        z++;
        for (m=1; m<=kapBir[i-1]; m++)
        {
            fscanf(okuBir,"%d %s %s %d %d",&tablo[z].numara,&tablo[z].isim,&tablo[z].soyisim,&tablo[z].siraNum,&tablo[z].tur);
            fprintf(dagilim[2*i-2],"%15d %15s %15s %10d %10d\n",tablo[z].numara,tablo[z].isim,tablo[z].soyisim,tablo[z].siraNum,tablo[z].tur);
            z++;
            if (z==ogrSayisiBir) m=kapBir[i-1]+2;
        }
    }
    z=0;
    for (i=1; i<=sinifSayisi; i++)
    {
        z++;
        for (m=1; m<=kapIki[i-1]; m++)
        {
            fscanf(okuIki,"%d %s %s %d %d",&tablo[z].numara,&tablo[z].isim,&tablo[z].soyisim,&tablo[z].siraNum,&tablo[z].tur);
            fprintf(dagilim[2*i-1],"%10d %15s %15s %10d %10d\n",tablo[z].numara,tablo[z].isim,tablo[z].soyisim,tablo[z].siraNum,tablo[z].tur);
            z++;
            if (z==ogrSayisiIki) m=kapIki[i-1]+2;
        }
    }
    fclose(okuBir);
    fclose(okuIki);
}
int main(){
    sil();
    bol();
    numAta();
    numAtaIki();
    ogrenciEkle();
    sinifOlusturma();
    return 0;
}
